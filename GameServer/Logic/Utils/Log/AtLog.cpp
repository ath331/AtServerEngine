////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief AtLog File
////////////////////////////////////////////////////////////////////////////////////////////////////


#include "pch.h"
#include "AtLog.h"
#include "Logic/Utils/Time/AtTime.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief  msg를 출력한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
AtVoid AtLog::PrintMsg( const char* file, AtInt32 line, AtString msg )
{
	const char* fileName = extractFileName( file );
	std::cout << "[ " << AtTime::GetCurTimeFormat() << " ] " << fileName << "::" << line << ", " << msg << std::endl;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief  msg를 빨간색으로 출력한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
AtVoid AtLog::PrintRedMsg( const char* file, AtInt32 line, AtString msg )
{
	AtStringColor stringColor( AtStringColor::EColor::Red );
	PrintMsg( file, line, msg );
}


////////////////////////////////////////////////////////////////////////////////////////////////////
// @brief  파일 경로에서 파일 이름만 추출하는 함수
////////////////////////////////////////////////////////////////////////////////////////////////////
const char* AtLog::extractFileName( const char* filePath )
{
	// '/' 기준으로 파일 이름 찾기 (유닉스 계열 OS)
	const char* fileName = std::strrchr( filePath, '/' ); 
	if ( !fileName )
	{
		// '\' 기준으로 파일 이름 찾기 (Windows)
		fileName = std::strrchr( filePath, '\\' );
	}

	// 경로 구분자가 있으면 그 다음 문자 반환, 없으면 전체 경로 반환
	return fileName ? fileName + 1 : filePath;
}
